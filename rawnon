#!/data/data/com.termux/files/usr/bin/bash
# Import source
. /sdcard/ShellUtility/.lib/libenc.sh

menu() {
    # Clear screen
    cl
    
    # Print header
    pr " ---- Welcome to Shell Utility! ---- "
    pr
    pr " Version: 1.2.5 "
    pr " Author: @eraselk20 (telegram) "
    pr " Build Date: $(cat ${dir2}/.build_date) "
    pr
    pr " Select a Number"
    pr "[1] Encrypt a script using shc"
    pr "[2] Encrypt a script using ssc [NEW]"
    pr "[3] Telegram Channel"
    pr "[4] Update Packages"
    pr "[5] Decrypt a shc binarry"
    pr "[6] Edit decrypter script"
    pr "[7] Uninstall Script"
    pr "[0] Exit"

    # Input function
    inpt ": " menu
    
    # Handle user input
    case $menu in
        1) encrypt ;;
        0) abort ;;
        3) open_telegram ;;
        4) update_packages ;;
        7) uninstall_script ;;
        5) decrypt ;;
        6) edit_decrypter_script ;;
        2) encrypt_ssc ;;
        *) pr "ERR: Invalid answer." ;;
    esac
}

encrypt() {
    # Clear screen
    cl
    
    # Print instructions
    pr
    pr "Q: Enter the name of the script you want to encrypt"
    
    # Input function
    inpt "A: " nama
    
    if [[ ! -e "${SP}/$nama" ]]; then
        pr 
        pr "ERR: Script not found!"
        pr
        sl 3s
        encrypt
    else
        pr
        pr "INFO: Script found!"
        pr
        pr "Q: Enter the name of the script after encryption"
        inpt "A: " namax
    fi
    
    pr
    pr "Q: Use expiration date? [y/n]"
    inpt "A: " expd
    
    if [[ $expd == "y" ]]; then
        pr
        pr "Q: Enter the date, using format dd/mm/yyyy"
        inpt "A: " datexp
        
        pr
        pr "Q: Enter the Expiration message"
        inpt "A: " expmsg
        
        sleep 2s
        
        # Compile
        pr 
        pr "[*] Compiling.."
        shc -r -e ${datexp} -m "${expmsg}" -f ${SP}/$nama -o ${SP}/output/$namax
        rm -f ${SP}/$nama.x.c
        pr "[*] Done"
        sl 3s
        menu
    elif [[ $expd == "n" ]]; then
        # Encrypt
        shc -rf ${SP}/$nama -o ${SP}/output/$namax
        sl 2s
        rm -f ${SP}/$nama.x.c
        pr "INFO: Done!, now check the output in ${SP}/output/${namax}."
        sl 3s
        menu
    else
        pr "Invalid Answer!"
        sleep 2s
        menu
    fi
}

decrypt() {
    # Clear screen
    cl
    
    # Print instructions
    pr 
    pr "Enter your binary file name"
    
    # Input function
    inpt ": " answr
    
    if [[ -e "${SP}/$answr" ]]; then
        pr "INFO: Binary Found!"
        cp ${SP}/$answr $dir2 
        chmod 777 ${dir2}/$answr
        sl 1s
        pr "[*] Please Wait..."
        touch .tmps
        echo "${answr}" >> .tmps
        sl 5s
    else
        pr "ERR: Binary not found:("
        sl 3s
        menu
    fi
    
    cl
    pr
    dec ./$(cat .tmps)
    end
}

encrypt_ssc() {
# Clear screen
    cl
    
    # Print instructions
    pr
    pr "Q: Enter the name of the script you want to encrypt"
    
    # Input function
    inpt "A: " nama
    
    if [[ ! -e "${SP}/$nama" ]]; then
        pr 
        pr "ERR: Script not found!"
        pr
        sl 3s
        encrypt_ssc
    else
        pr
        pr "INFO: Script found!"
        pr
        pr "Q: Enter the name of the script after encryption"
        inpt "A: " namax
    fi
    
        # Compile
        pr 
        pr "[*] Compiling.."
        cp -r ${SP}/$nama $HOME; chmod 777 $HOME/$nama
        ssc $nama $namax
        mv -f $HOME/$namax ${SP}/output; rm -f $HOME/$nama
        pr "[*] Done"
        sl 3s
        menu
}
menu