#!/data/data/com.termux/files/usr/bin/bash
# A Simple Script.
# Version 1.2.3
# Copyright (C) 2023-2024 eraselk
#
#			GNU GENERAL PUBLIC LICENSE
#			 Version 3, 29 June 2007
#
# Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
# Everyone is permitted to copy and distribute verbatim copies
# of this license document, but changing it is not allowed.

# import source
source /sdcard/ShellEncrypter/.lib/libenc.sh

menu() {
# menu
cl
pr " ------- Welcome to Shell Encrypter! ------- "
pr
pr " Version: 1.2.3 "
pr " Author: @eraselk20 (telegram) "
pr " Build Date: $(cat ${dir2}/.build_date) "
pr
pr " Select a Number"
pr "[1] Encrypt a script"
pr "[2] Telegram Channel"
pr "[3] Update Packages"
pr "[4] Decrypt a script"
pr "[5] Edit decrypter script"
pr "[6] Uninstall Script"
pr "[0] Exit"
# input function
inpt ": " menu
if [[ $menu == "1" ]]; then
encrypt
elif [[ $menu == "0" ]]; then
abort
elif [[ $menu == "2" ]]; then
am start -a android.intent.action.VIEW -d https://t.me/gacorpkjrt
menu
elif [[ $menu == "3" ]]; then
cl
sl 1s
pr
pr "[*] Please wait..."
pr
install_pkg
pr 
pr "[*] Done"
sl 3s
menu
elif [[ $menu == "6" ]]; then
cl
sl 2s
pr "[*] Uninstalling script..."
sl 3s
rm ${dir1}/enc
rm ${dir1}/dec
rm ${dir2}/.build_date
rm -rf ${SP}
pr "[*] Done!, See you:)"
end
elif [[ $menu == "4" ]]; then
decrypt
elif [[ $menu == "5" ]]; then
nano ${dir1}/dec
menu
else
pr "ERR: Invalid answer."
sl 4s
menu
fi
}

encrypt() {
# input function
cl
pr
pr "Q: Enter the name of the script you want to encrypt"
inpt "A: " nama
if [[ ! -e "${SP}/$nama" ]]; then
pr 
pr "ERR: Script not found!"
pr
sl 3s
encrypt
elif [[ -e "${SP}/$nama" ]]; then
pr
pr "INFO: Script found!"
pr
pr "Q: Enter the name of the script after encryption"
inpt "A: " namax
fi
pr
pr "Q: Use expiration date? [y/n]"
inpt "A: " expd
if [[ $expd == "y" ]]; then
pr
pr "Q: Enter the date, using format dd/mm/yyyy"
inpt "A: " datexp
pr
pr "Q: Enter the Expiration message"
inpt "A: " expmsg
sleep 2s
pr 
pr "[*] Compiling.."
shc -r -e ${datexp} -m ${expmsg} -f ${SP}/$nama -o ${SP}/output/$namax
pr "[*] Done"
sl 3s
menu
elif [[ $expd == "n" ]]; then
# encrypt
shc -r ${SP}/$nama -o ${SP}/output/$namax
sl 2s
rm ${SP}/$nama.x.c
pr "INFO: Done!, now check the output in ${SP}/output/${namax}."
sl 3s
menu
else
pr "Invalid Answer!"
sleep 2s
menu
fi
}

decrypt() {
cl
pr 
pr "Enter your binnary file name"
inpt ": " answr
pr
if [[ -e "${SP}/$answr" ]]; then
pr "INFO: Binnary Found!"
cp ${SP}/$answr $dir2 
chmod 777 ${dir2}/$answr
sl 1s
pr "[*] Please Wait..."
touch .tmps
echo "${answr}" >> .tmps
sl 5s
else
pr "ERR: Binnary not found:("
sl 3s ; menu
fi
cl
pr
dec ./$(cat .tmps)
end
}

while true; do
menu
encrypt
done
